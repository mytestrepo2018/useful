apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: prom
    meta.helm.sh/release-namespace: metrics
    prometheus-operator-input-hash: "15166973335368879789"
  creationTimestamp: "2021-12-04T04:27:21Z"
  generation: 14
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: prom
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.31.1
  name: prometheus-prom-prometheus-operator-prometheus
  namespace: metrics
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
      prometheus: prom-prometheus-operator-prometheus
  serviceName: prometheus-operated
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
        app.kubernetes.io/component: prometheus
        app.kubernetes.io/instance: prom
        app.kubernetes.io/name: prometheus-operator
        prometheus: prom-prometheus-operator-prometheus
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: prometheus
                  app.kubernetes.io/instance: prom
                  app.kubernetes.io/name: prometheus-operator
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --web.console.templates=/etc/prometheus/consoles
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=10h
        - --web.enable-lifecycle
        - --web.external-url=http://prom-prometheus-operator-prometheus.metrics:9090
        - --web.route-prefix=/
        - --log.level=debug
        - --storage.tsdb.wal-compression
        - --storage.tsdb.max-block-duration=2h
        - --storage.tsdb.min-block-duration=2h
        image: docker.io/bitnami/prometheus:2.20.1-debian-10-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/healthy
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/prometheus/config_out
          name: config-out
          readOnly: true
        - mountPath: /etc/prometheus/certs
          name: tls-assets
          readOnly: true
        - mountPath: /prometheus
          name: prometheus-prom-prometheus-operator-prometheus-db
        - mountPath: /etc/prometheus/rules/prometheus-prom-prometheus-operator-prometheus-rulefiles-0
          name: prometheus-prom-prometheus-operator-prometheus-rulefiles-0
      - args:
        - --log-format=logfmt
        - --reload-url=http://127.0.0.1:9090/-/reload
        - --config-file=/etc/prometheus/config/prometheus.yaml.gz
        - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
        command:
        - /bin/prometheus-config-reloader
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: docker.io/bitnami/prometheus-operator:0.41.0-debian-10-r5
        imagePullPolicy: IfNotPresent
        name: prometheus-config-reloader
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
        - mountPath: /etc/prometheus/config_out
          name: config-out
      - args:
        - --webhook-url=http://127.0.0.1:9090/-/reload
        - --volume-dir=/etc/prometheus/rules/prometheus-prom-prometheus-operator-prometheus-rulefiles-0
        image: docker.io/bitnami/configmap-reload:0.4.0-debian-10-r18
        imagePullPolicy: IfNotPresent
        name: rules-configmap-reloader
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/prometheus/rules/prometheus-prom-prometheus-operator-prometheus-rulefiles-0
          name: prometheus-prom-prometheus-operator-prometheus-rulefiles-0
      - args:
        - sidecar
        - --prometheus.url=http://localhost:9090
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --tsdb.path=/prometheus
        - --objstore.config=$(OBJSTORE_CONFIG)
        - --log.level=debug
        - --prometheus.ready_timeout=10m
        env:
        - name: OBJSTORE_CONFIG
          valueFrom:
            secretKeyRef:
              key: tsc
              name: tsc
        image: thanosio/thanos:main-2021-12-02-c0a3f145
        imagePullPolicy: IfNotPresent
        name: thanos-sidecar
        ports:
        - containerPort: 10901
          name: grpc
          protocol: TCP
        - containerPort: 10902
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /prometheus
          name: prometheus-prom-prometheus-operator-prometheus-db
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccount: thanos-s3
      serviceAccountName: thanos-s3
      terminationGracePeriodSeconds: 600
      volumes:
      - name: config
        secret:
          defaultMode: 420
          secretName: prometheus-prom-prometheus-operator-prometheus
      - name: tls-assets
        secret:
          defaultMode: 420
          secretName: prometheus-prom-prometheus-operator-prometheus-tls-assets
      - emptyDir: {}
        name: config-out
      - configMap:
          defaultMode: 420
          name: prometheus-prom-prometheus-operator-prometheus-rulefiles-0
        name: prometheus-prom-prometheus-operator-prometheus-rulefiles-0
      - hostPath:
          path: /tmp
          type: Directory
        name: prometheus-prom-prometheus-operator-prometheus-db
  updateStrategy:
    type: RollingUpdate

